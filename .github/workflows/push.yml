name: Continuous Integration
on: push
jobs:
  unit-tests:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        node-version:
          - 14.x
          - 16.x
    steps:
      - uses: actions/checkout@v2
      - name: 'Install node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v2-beta
        with:
          node-version: '${{ matrix.node-version }}'
      - name: Download database
        shell: bash
        env:
          BUCKET: https://data.geocode.earth/placeholder
        run: |
          export AGENT="github/${GITHUB_ACTOR}"
          export REFERER="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          mkdir data
          curl -A ${AGENT} -e ${REFERER} -sfo data/store.sqlite3.gz ${BUCKET}/archive/$(date +%Y-%m-%d)/store.sqlite3.gz || true
          [ -e data/store.sqlite3.gz ] || curl -A ${AGENT} -e ${REFERER} -so data/store.sqlite3.gz ${BUCKET}/store.sqlite3.gz
          gunzip data/store.sqlite3.gz
      - name: Run unit tests
        run: |
          npm install
          npm run travis
  npm-publish:
    needs: unit-tests
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - name: Install node.js 12.x
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.x
      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_SEMANTIC_RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: >
          if [[ -n "$GH_TOKEN" && -n "$NPM_TOKEN" ]]; then
            curl "https://raw.githubusercontent.com/pelias/ci-tools/master/semantic-release.sh" | bash -
          fi
  build-docker-images:
    # run this job if the unit tests passed and the npm-publish job was a success or was skipped
    # note: github actions won't run a job if you don't call one of the status check functions, so `always()` is called since it evalutes to `true`
    if: ${{ always() && needs.unit-tests.result == 'success' && (needs.npm-publish.result == 'success' || needs.npm-publish.result == 'skipped') }}
    needs: [unit-tests, npm-publish]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Dump needs context
        env:
          NEEDS_CONTEXT: ${{ toJSON(needs) }}
        run: echo "$NEEDS_CONTEXT"
      - name: Build Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          curl "https://raw.githubusercontent.com/pelias/ci-tools/master/build-docker-images.sh" | bash -
